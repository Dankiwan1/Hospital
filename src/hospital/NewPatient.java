
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Dankiwan
 */
public class NewPatient extends javax.swing.JInternalFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    private static NewPatient newpatientinstance;
    private String daate, telephone, ptitle, fname, lname, gender, marital_status, bgroup, town, village, email, pimage, mno, regdate, p_age, p_cat, p_id;
    String user = "";
    String filename, datedb;
    int cfee = 300;
    public int ID;
    int pregdate, month, year, day, age;

    /**
     * Creates new form NewJInternalFrame
     */
    public NewPatient() {

        initComponents();
        datenandtime();
        con = javaconnect.ConnectDb();
        PatientId();
        combofill();

        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

    }

    public void combofill() {
        try {
            String sql1 = "select category_name from hospital_patient_category ";
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("category_name");
                Jcpatientcategory.addItem(name);
            }
        } catch (SQLException ex) {
            Logger.getLogger(NewPatient.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel29 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_patientid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jc_title = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        txt_firstname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_lastname = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jC_gender = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jC_bgroup = new javax.swing.JComboBox();
        jPanel15 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        txt_town = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txt_village = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txt_telno = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_mobileno = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        dsphoto = new javax.swing.JDesktopPane();
        lbphoto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jc_marital_status = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        Jcpatientcategory = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        NewPatientsvbtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("NEW PATIENT");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-contact-icon.png"))); // NOI18N
        setOpaque(true);

        jLabel1.setText("Patient ID:");

        txt_patientid.setEditable(false);
        txt_patientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_patientidActionPerformed(evt);
            }
        });
        txt_patientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_patientidKeyTyped(evt);
            }
        });

        jLabel2.setText("Registration Date:");

        date.setEditable(false);
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_patientid, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(date)
                        .addComponent(jLabel2))
                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_patientid)
                        .addComponent(jLabel1)))
                .addGap(6, 6, 6))
        );

        jTabbedPane4.setToolTipText("");

        jPanel13.setPreferredSize(new java.awt.Dimension(700, 340));

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Info"));

        jc_title.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Mr.", "Mrs.", "Miss", " " }));
        jc_title.setToolTipText("");
        jc_title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc_titleActionPerformed(evt);
            }
        });

        jLabel17.setText("First Name:");

        txt_firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_firstnameActionPerformed(evt);
            }
        });
        txt_firstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_firstnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_firstnameKeyTyped(evt);
            }
        });

        jLabel18.setText("Last Name:");

        txt_lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lastnameActionPerformed(evt);
            }
        });
        txt_lastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lastnameKeyTyped(evt);
            }
        });

        jLabel19.setText("Gender:");

        jLabel20.setText("Title:");

        jC_gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "  ", "Male", "Female" }));
        jC_gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_genderActionPerformed(evt);
            }
        });

        jLabel21.setText("Age:");

        txt_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ageActionPerformed(evt);
            }
        });
        txt_age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ageKeyTyped(evt);
            }
        });

        jLabel22.setText("Yrs");

        jLabel23.setText("Marital Status:");

        jLabel24.setText("Blood Group:");

        jC_bgroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "O-", "O+", "A-", "A+", "B-", "B+", "AB-", "AB+", "Not Known" }));
        jC_bgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_bgroupActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

        jLabel25.setText("Town:");

        txt_town.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_townActionPerformed(evt);
            }
        });
        txt_town.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_townKeyTyped(evt);
            }
        });

        jLabel26.setText("Estate/Village:");

        txt_village.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_villageActionPerformed(evt);
            }
        });
        txt_village.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_villageKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_town, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_village, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txt_town, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txt_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Info"));

        jLabel27.setText("Tel No:");

        txt_telno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telnoKeyTyped(evt);
            }
        });

        jLabel28.setText("Mobile No:");

        txt_mobileno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mobilenoActionPerformed(evt);
            }
        });
        txt_mobileno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mobilenoKeyTyped(evt);
            }
        });

        jLabel29.setText("Email Adress:");

        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_emailKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(14, 14, 14)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_mobileno, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                        .addComponent(txt_telno)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txt_telno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txt_mobileno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Photo"));

        javax.swing.GroupLayout dsphotoLayout = new javax.swing.GroupLayout(dsphoto);
        dsphoto.setLayout(dsphotoLayout);
        dsphotoLayout.setHorizontalGroup(
            dsphotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
        );
        dsphotoLayout.setVerticalGroup(
            dsphotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsphotoLayout.createSequentialGroup()
                .addComponent(lbphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dsphoto.setLayer(lbphoto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Upload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dsphoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(45, 45, 45))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(dsphoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        jc_marital_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Single", "Married", " " }));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jc_title, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21))
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jC_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_lastname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jC_bgroup, 0, 150, Short.MAX_VALUE)
                                    .addComponent(jc_marital_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jc_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(txt_lastname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jC_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jc_marital_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jC_bgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        jPanel18.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Jcpatientcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        Jcpatientcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcpatientcategoryActionPerformed(evt);
            }
        });
        Jcpatientcategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JcpatientcategoryKeyPressed(evt);
            }
        });

        jLabel3.setText("Patient Category");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Jcpatientcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jcpatientcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Patient Details", jPanel13);

        jToolBar1.setRollover(true);

        NewPatientsvbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save-icon.png"))); // NOI18N
        NewPatientsvbtn.setText("Save");
        NewPatientsvbtn.setFocusable(false);
        NewPatientsvbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NewPatientsvbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NewPatientsvbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPatientsvbtnActionPerformed(evt);
            }
        });
        jToolBar1.add(NewPatientsvbtn);
        jToolBar1.add(jSeparator1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear-icon.png"))); // NOI18N
        jButton3.setText("Clear");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 905, 456);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        uploadphoto();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_mobilenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mobilenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mobilenoActionPerformed

    private void txt_villageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_villageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_villageActionPerformed

    private void txt_townActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_townActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_townActionPerformed

    private void jC_bgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_bgroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jC_bgroupActionPerformed

    private void txt_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageActionPerformed

    private void jC_genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jC_genderActionPerformed

    private void txt_lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lastnameActionPerformed

    private void txt_firstnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_firstnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_firstnameKeyReleased

    private void txt_firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_firstnameActionPerformed

    private void jc_titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jc_titleActionPerformed

    private void JcpatientcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcpatientcategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcpatientcategoryActionPerformed

    private void txt_patientidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_patientidKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_patientidKeyTyped

    private void txt_patientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_patientidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_patientidActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void txt_ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_txt_ageKeyTyped

    private void txt_telnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telnoKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telnoKeyTyped

    private void txt_mobilenoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobilenoKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mobilenoKeyTyped

    private void JcpatientcategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JcpatientcategoryKeyPressed
// TODO add your handling code here:
    }//GEN-LAST:event_JcpatientcategoryKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Clear();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void NewPatientsvbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPatientsvbtnActionPerformed
        SavenewPatient();

        // TODO add your handling code here:
    }//GEN-LAST:event_NewPatientsvbtnActionPerformed

    private void txt_firstnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_firstnameKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_firstnameKeyTyped

    private void txt_lastnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lastnameKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lastnameKeyTyped

    private void txt_townKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_townKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_townKeyTyped

    private void txt_villageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_villageKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_villageKeyTyped

    private void txt_emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emailKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emailKeyReleased
    public void datenandtime() {
        Thread clock = new Thread() {
            public void run() {
                for (;;) {
                    Calendar cal = new GregorianCalendar();
                    month = cal.get(Calendar.MONTH);
                    year = cal.get(Calendar.YEAR);
                    day = cal.get(Calendar.DAY_OF_MONTH);
                    SimpleDateFormat date_format = new SimpleDateFormat("dd/MM/yyyy");

                    date.setText(date_format.format(cal.getTime()));
                    // date.setText( year+ "/" + (month + 1) + "/" + day);
                    daate = (year + "/" + (month + 1) + "/" + day);

                    int second = cal.get(Calendar.SECOND);
                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);

                    //   time.setText(hour + ":" + (minute) + ":" + second);
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                    }
                }
            }
        };
        clock.start();
    }

    public void Clear() {
        jc_title.setSelectedIndex(0);
        txt_firstname.setText(null);
        txt_lastname.setText(null);
        Jcpatientcategory.setSelectedIndex(0);
        jC_gender.setSelectedIndex(0);
        jc_marital_status.setSelectedIndex(0);
        jC_bgroup.setSelectedIndex(0);
        txt_town.setText(null);
        txt_village.setText(null);
        txt_email.setText(null);
        txt_telno.setText(null);
        txt_mobileno.setText(null);
        txt_age.setText(null);
        lbphoto.setIcon(null);

    }

    public void SavenewPatient() {
   char ampersand = '@';
            String com = ".com";
        try {

            if (Jcpatientcategory.getSelectedIndex() == 0) {
                Jcpatientcategory.setBackground(Color.GREEN);

                JOptionPane.showMessageDialog(null, "Please choose the patient Category", "Alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (jc_title.getSelectedIndex() == 0) {
                jc_title.setBackground(Color.GREEN);
                JOptionPane.showMessageDialog(null, "Please choose the patient Title", "Alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txt_firstname.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Enter the Firstname", "Alert", JOptionPane.ERROR_MESSAGE);
                txt_firstname.setBackground(Color.GREEN);
                return;
            }
            if (txt_lastname.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Enter the Lastname", "Alert", JOptionPane.ERROR_MESSAGE);
                txt_lastname.setBackground(Color.GREEN);
                return;
            }
            if (jC_gender.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Please choose the patient Gender", "Alert", JOptionPane.ERROR_MESSAGE);
                jC_gender.setBackground(Color.GREEN);
                return;
            }
            if (txt_age.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Enter the Age", "Alert", JOptionPane.ERROR_MESSAGE);
                txt_age.setBackground(Color.GREEN);
                return;
            }
            if (jc_marital_status.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Please Choose the Marital Status", "Alert", JOptionPane.ERROR_MESSAGE);
                jc_marital_status.setBackground(Color.GREEN);
                return;
            }
            if (jC_bgroup.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Please choose the Blood Group", "Alert", JOptionPane.ERROR_MESSAGE);
                jC_bgroup.setBackground(Color.GREEN);
                return;
            }
            if (txt_town.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Enter the town of residence", "Alert", JOptionPane.ERROR_MESSAGE);
                txt_town.setBackground(Color.GREEN);
                return;
            }
            if (txt_village.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter the village of residence", "Alert", JOptionPane.ERROR_MESSAGE);
                txt_village.setBackground(Color.GREEN);
                return;
            }
         
            if (txt_email.getText().equals("")) {

            } else {
                String e_mailadress = txt_email.getText();

                int result = e_mailadress.indexOf(ampersand);
                int result1 = e_mailadress.indexOf(com);
                if (result == -1 || result1 == -1) {
                    JOptionPane.showMessageDialog(null, "Invalid E-email address");
                    return;
                }}
                p_cat = (String) Jcpatientcategory.getSelectedItem();
                ptitle = (String) jc_title.getSelectedItem();
                fname = txt_firstname.getText();
                lname = txt_lastname.getText();
                gender = (String) jC_gender.getSelectedItem();
                p_age = txt_age.getText();
                age = Integer.parseInt(p_age);
                marital_status = (String) jc_marital_status.getSelectedItem();
                bgroup = (String) jC_bgroup.getSelectedItem();
                town = txt_town.getText();
                village = txt_village.getText();
                email = txt_email.getText();
                mno = txt_mobileno.getText();
                telephone = txt_telno.getText();

                String newpatientinsert = "insert into patient(TITLE, FIRST_NAME, LAST_NAME, GENDER,  EMAIL, TELPHONE, MOBILE_NO, REGISTRATION_DATE) values('" + ptitle + "','" + fname + "','" + lname + "','" + gender + "','" + email + "','" + telephone + "','" + mno + "','" + daate + "')";
                String newpatientinsertcat = "insert into patient_category(PATIENT_ID,PATIENT_CATEGORY,GENDER, MARITAL_STATUS, BLOOD_GROUP, TOWN, VILLAGE, REGISTRATION_DATE, AGE, STATUS,IMAGE) values('" + ID + "','" + p_cat + "','" + gender + "','" + marital_status + "','" + bgroup + "','" + town + "','" + village + "','" + daate + "','" + age + "','First-Time','" + filename + "')";
                String newpatientinsertbil = "insert into patient_billing(PATIENT_ID,DATE,CONSULTATION_FEE,MEDICAL_FEE, LAB_FEE ) values('" + ID + "','" + year + "/" + (month + 1) + "/" + day + "','" + cfee + "','" + 0 + "','" + 0 + "')";

                Statement sttm = con.createStatement();
                sttm.executeUpdate(newpatientinsert);
                sttm.executeUpdate(newpatientinsertcat);
                sttm.executeUpdate(newpatientinsertbil);
                JOptionPane.showMessageDialog(null, "Patient Details Saved!!");

            }catch (SQLException ex) {
            Logger.getLogger(NewPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
            Clear();
            PatientId();
            new MyPrintDialog(null);
        }

    

    public void PatientId() {

        try {
            String rowcount = "Select * from patient ORDER BY PATIENT_ID DESC LIMIT 1";
            pst = con.prepareStatement(rowcount);
            rs = pst.executeQuery();
            if (rs.next()) {
                String count = rs.getString("PATIENT_ID");

                int ncout = Integer.parseInt(count);
                int m = ++ncout;
                ID = m;
                txt_patientid.setText("M.M.C / " + m + " / 2014");

            } else {
                txt_patientid.setText("M.M.C / 1 / 2014");
                ID = 1;
            }

        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void uploadphoto() {
        JFileChooser photoupload = new JFileChooser();
        photoupload.showOpenDialog(null);
        File f = photoupload.getSelectedFile();
        filename = f.getAbsolutePath();
        photoformat = new ImageIcon(filename);
        lbphoto.setIcon(photoformat);

    }

    class MyPrintDialog extends JDialog {

        public MyPrintDialog(JFrame frame) {
            super(frame, "PRINT CARD", true);

            setBounds(500, 200, 200, 200);
            JButton vb = new JButton("PRINT CARD");
            vb.setBounds(140, 20, 50, 20);
            vb.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    dispose();
                    try {
//String report="D:\\NetbeansProject\\Hospital\\Reports\\report2.jrxml";
                       // JasperDesign jd = JRXmlLoader.load("Reports\\report2.jrxml");
                       
                                  JasperDesign jd = JRXmlLoader.load("Reports\\report2.jrxml");
                               //   "c://Program Files (x86)//PAS//PAS Help.chm"
                              //    D:\NetbeansProject\Hospital\src\Reports\report2.jrxml
             String sql = "(SELECT patient.TITLE,patient.FIRST_NAME,patient.LAST_NAME,patient.PATIENT_ID,patient.GENDER,patient.REGISTRATION_DATE,patient_category.AGE,patient_category.TOWN,patient_category.VILLAGE FROM patient,patient_category WHERE patient.PATIENT_ID=" + (ID - 1) + " and (patient.PATIENT_ID=patient_category.PATIENT_ID))";
                        JRDesignQuery newQuery = new JRDesignQuery();
                        newQuery.setText(sql);
                        jd.setQuery(newQuery);
                        JasperReport jr = JasperCompileManager.compileReport(jd);
                        JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                        JasperViewer.viewReport(jp, false);

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                }
            });
            JButton ex = new JButton("CLOSE");
            ex.setBounds(200, 20, 50, 20);
            ex.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent ae) {

                    dispose();
                }
            });
            JPanel c = new JPanel();
            c.add(vb);
            c.add(ex);
            setContentPane(c);
            this.show();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Jcpatientcategory;
    private javax.swing.JButton NewPatientsvbtn;
    private javax.swing.JTextField date;
    private javax.swing.JDesktopPane dsphoto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jC_bgroup;
    private javax.swing.JComboBox jC_gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox jc_marital_status;
    private javax.swing.JComboBox jc_title;
    private javax.swing.JLabel lbphoto;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_lastname;
    private javax.swing.JTextField txt_mobileno;
    private javax.swing.JTextField txt_patientid;
    private javax.swing.JTextField txt_telno;
    private javax.swing.JTextField txt_town;
    private javax.swing.JTextField txt_village;
    // End of variables declaration//GEN-END:variables
private ImageIcon photoformat;

}
