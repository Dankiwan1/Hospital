/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital;

import java.awt.Color;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dankiwan
 */
public class PatientBill extends javax.swing.JInternalFrame {

    Connection con = null;
    ResultSet rs = null;
    ResultSet rrs = null;
    ResultSet rrcs = null;
    PreparedStatement pst = null;
    String pid = null;
    String fname, lname, titlee, testname, testdesc, date, user,p;
    int month, year, day, minutes, seconds, hour;

    float amount;

    /**
     * Creates new form PatientBill
     */
    public PatientBill() {
        initComponents();
        con = javaconnect.ConnectDb();
        datenandtime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consult_bill = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        medt_bill = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        labt_bill = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        overviewtable = new javax.swing.JTable();
        lb_total = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txt_user = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setTitle("PATIENT BILL");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sold Items"));

        consult_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Value"
            }
        ));
        jScrollPane1.setViewportView(consult_bill);

        medt_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Value"
            }
        ));
        jScrollPane2.setViewportView(medt_bill);

        labt_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Value"
            }
        ));
        jScrollPane5.setViewportView(labt_bill);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Overview"));

        overviewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(overviewtable);

        lb_total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_total.setText("0.00");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Total:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Enert The Patient ID:");

        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_user.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N

        jButton3.setText("Add Payment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        Search();
        ConsulTableFill();
        //gettotal_lab_bill();
        OverviewTableFill();
        Summ();
        LoadSoldItemsmed();
LoadSoldItemsLab();
// TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        Search();
        ConsulTableFill();
        // gettotal_lab_bill();
        OverviewTableFill();
        Summ();
        LoadSoldItemsmed();
LoadSoldItemsLab();
// TODO add your handling code here:
    }//GEN-LAST:event_txt_searchKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Search();
        ConsulTableFill();
       // gettotal_lab_bill();
        OverviewTableFill();
        Summ();// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (txt_search.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the patient id");
            txt_search.setBackground(Color.GREEN);
            return;
        }
        Payment pay = new Payment(null, closable, user, p,pid);
        pay.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public void Search() {
        if (txt_search.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the patient id");
            txt_search.setBackground(Color.GREEN);
            return;
        }
        try {
            String sql1 = "SELECT patient.TITLE,patient.FIRST_NAME,patient.LAST_NAME,patient.PATIENT_ID from patient  WHERE patient.PATIENT_ID=?";
            pst = con.prepareStatement(sql1);
            pst.setString(1, txt_search.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                pid = rs.getString("PATIENT_ID");

                titlee = rs.getString("TITLE");

                fname = rs.getString("FIRST_NAME");

                lname = rs.getString("LAST_NAME");
                user = (titlee + " " + fname + " " + lname + " [" + pid + "]");

                txt_user.setText(titlee + " " + fname + " " + lname + " [" + pid + "]");
                this.setTitle(titlee + " " + fname + " " + lname + " [" + pid + "] " + " BILL");
            } else {
                JOptionPane.showMessageDialog(null, "Sorry the patient id does not exist");
                this.setTitle("BILL");
                txt_user.setText("");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
// Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void datenandtime() {
        Thread clock = new Thread() {
            public void run() {
                for (;;) {
                    Calendar cal = new GregorianCalendar();
                    month = cal.get(Calendar.MONTH);
                    year = cal.get(Calendar.YEAR);
                    day = cal.get(Calendar.DAY_OF_MONTH);
                    SimpleDateFormat date_format = new SimpleDateFormat("dd/MM/yyyy");

                    //  date.setText(date_format.format(cal.getTime()));
                    // date.setText( year+ "/" + (month + 1) + "/" + day);
                    //daate = (year + "/" + (month + 1) + "/" + day);
                    int second = cal.get(Calendar.SECOND);
                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);

                    //   time.setText(hour + ":" + (minute) + ":" + second);
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                    }
                }
            }
        };
        clock.start();
    }

//    public void gettotal_lab_bill() {
//        try {
//            String tol = "select LAB_FEE from patient_lab_bill where PATIENT_ID='" + pid + "'and date='" + (year + "/" + (month + 1) + "/" + day) + "'";
//            String toll = "select M_COST from patient_medicine_bill where patient_medicine_bill.PATIENT_ID='" + pid + "'and patient_medicine_bill.date='" + (year + "/" + (month + 1) + "/" + day) + "'";
//            String tolll = "select CONSULTATION_FEE from patient_billing where patient_billing.PATIENT_ID='" + pid + "'and patient_billing.date='" + (year + "/" + (month + 1) + "/" + day) + "'";
//
//            pst = con.prepareStatement(tol);
//            rs = pst.executeQuery();
//            pst = con.prepareStatement(toll);
//            rrs = pst.executeQuery();
//            pst = con.prepareStatement(tolll);
//            rrcs = pst.executeQuery();
//            float total = 0;
//            float total2 = 0;
//            float tottsl = 0;
//            while (rs.next()) {
//                String Lab_fee = rs.getString("LAB_FEE");
//                float tt = Float.parseFloat(Lab_fee);
//                total = total + tt;
//
//            }
//            while (rrs.next()) {
//                String medicine_fee = rrs.getString("M_COST");
//                float ttm = Float.parseFloat(medicine_fee);
//                total2 = total2 + ttm;
//            }
//            while (rrcs.next()) {
//                String consultation_fee = rrcs.getString("CONSULTATION_FEE");
//                float ttmc = Float.parseFloat(consultation_fee);
//                tottsl = tottsl + ttmc;
//            }
//            amount = (total + total2 + tottsl);
//            lb_total.setText("" + (total + total2 + tottsl) + "0");
//
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null, ex);
//// Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    public void Summ() {
        try {
            String dd = "Select sum(consultation_fee+medical_fee+lab_fee) as TOTAL from patient_billing where patient_id='" + pid + "' and date='" + (year + "/" + (month + 1) + "/" + day) + "'";
            pst = con.prepareStatement(dd);

            rs = pst.executeQuery();
            if (rs.next()) {
               p = rs.getString("Total");
                if (p == null) {
                    lb_total.setText("KSHS 0.00");
                } else {
                    lb_total.setText("KSHS " + p);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void OverviewTableFill() {

        try {

            String query = "Select date as 'Date',consultation_fee as'Consultation',medical_fee as 'Medical Fee' ,lab_fee as 'Lab Fee' from patient_billing where patient_id='" + pid + "'and date='" + (year + "/" + (month + 1) + "/" + day) + "'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            overviewtable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       public void ConsulTableFill() {

        try {

            String query = "Select date as 'Date',consultation_fee as'Consultation' from patient_billing where patient_id='" + pid + "'and date='" + (year + "/" + (month + 1) + "/" + day) + "'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            consult_bill.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadSoldItemsmed() {

        try {

            String query = "Select patient_medicine.medicine_name as 'Name',patient_medicine.items as 'Items',patient_medicine_bill.m_cost as 'Value' from patient_medicine,patient_medicine_bill where (patient_medicine.patient_id='" + pid + "'and (patient_medicine.patient_id=patient_medicine_bill.patient_id)) and patient_medicine_bill.date='" + (year + "/" + (month + 1) + "/" + day) + "'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            medt_bill.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        public void LoadSoldItemsLab() {

        try {

            String query = "Select patient_lab_bill.test_name as ' Test Name',patient_lab_bill.lab_fee as 'Value' from patient_lab_bill where (patient_lab_bill.patient_id='" + pid + "') and patient_lab_bill.date='" + (year + "/" + (month + 1) + "/" + day) + "'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            labt_bill.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(PatientBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable consult_bill;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable labt_bill;
    private javax.swing.JLabel lb_total;
    private javax.swing.JTable medt_bill;
    private javax.swing.JTable overviewtable;
    private javax.swing.JTextField txt_search;
    private javax.swing.JLabel txt_user;
    // End of variables declaration//GEN-END:variables
}
